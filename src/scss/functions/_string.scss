////
/// @group  String
/// @author Sebastian Inman
////



/// @name   String\Replace
/// @since  01.29.2020
/// @param  {String} $string
/// @param  {String} $search
/// @param  {String} $replace
/// @return {String | Color} Searches a string for a substring and removes it. 

@function String\Replace($string, $search, $replace: '') {

  $index: str-index($string, $search);

  @if $index {

    @return str-slice($string, 1, $index - 1) + $replace + String\Replace(str-slice($string, $index + str-length($search)), $search, $replace);

  }

  @return $string;

}



/// @name   String\Explode
/// @since  01.29.2020 
/// @param  {String} $string
/// @param  {String} $delimiter

@function String\Explode($string, $delimiter: '') {

  @if type-of($string) != 'string' {

    @error 'The argument $string: `#{$string}` is of incorrect type: `#{type-of($string)}`. Type of `String` is required.';

  }

  @if type-of($delimiter) != 'string' {

    @error 'The argument $delimiter: `#{$delimiter}` is of incorrect type: `#{type-of($delimiter)}`. Type of `String` is required.';

  }

  $result: ();
  $running: true;

  @if str-length($delimiter) == 0 {

    @for $i from 1 through str-length($string) {

      $result: append($result, str-slice($string, $i, $i));

    }

    @return $result;

  }

  @while $running {

    $index: str-index($string, $delimiter);

    @if $index != null {

      $item: str-slice($string, 1, ($index - 1));
      $result: append($result, $item);
      $string: str-slice($string, ($index + str-length($delimiter)));

    } @else {

      $running: false;

    }

  }

  @return append($result, $string);

}
